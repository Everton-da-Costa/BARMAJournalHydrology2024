setwd("~/Dropbox/github/BARMAJournalHydrology2024")
setwd("~/Dropbox/github/BARMAJournalHydrology2024/R")
setwd("~/Dropbox/github/BARMAJournalHydrology2024")
# install.packages("usethis") # Run this if you don't have it installed
usethis::use_git_config(
user.name = "everton-da-costa",
user.email = "everto.cost@gmail.com"
)
install.packages("gitcreds") # Run this if you don't have it
gitcreds::gitcreds_set()
setwd("~/Dropbox/github/BARMAJournalHydrology2024")
gitcreds::gitcreds_set()
setwd("~/Dropbox/github/BARMAJournalHydrology2024")
# install.packages("usethis") # Run this if you don't have it installed
usethis::use_git_config(
user.name = "everton-da-costa",
user.email = "everto.cost@gmail.com"
)
install.packages("gitcreds") # Run this if you don't have it
library(gitcreds)
gitcreds::gitcreds_set()
setwd("~/Dropbox/github/BARMAJournalHydrology2024")
# install.packages("usethis")
usethis::use_git_config(
user.name = "everton-da-costa",
user.email = "everto.cost@gmail.com"
)
# install.packages("gitcreds") # Run this if you don't have it
library(gitcreds)
gitcreds::gitcreds_set()
setwd("~/Dropbox/github/BARMAJournalHydrology2024")
# install.packages("usethis")
usethis::use_git_config(
user.name = "everton-da-costa",
user.email = "everto.cost@gmail.com"
)
library(gitcreds)
gitcreds::gitcreds_set()
usethis::git_sitrep()
gitcreds::gitcreds_set()
setwd("~/Dropbox/github/BARMAJournalHydrology2024")
usethis::use_git_ignore(c(".Rproj.user", ".Rhistory", ".Rdata", ".httr-oauth"))
usethis::use_git_ignore(c(".Rproj.user", ".Rhistory", ".Rdata", ".httr-oauth"))
# Lists all tutorials for this package
browseVignettes("BARMAJournalHydrology2024")
rm(list = ls())
getwd()
list.files()
devtools::load_all()
devtools::unload()
devtools::install()
devtools::document()
devtools::check()
# Lists all tutorials for this package
browseVignettes("BARMAJournalHydrology2024")
if (!require("remotes")) {
install.packages("remotes")
}
remotes::install_github("everton-da-costa/BARMAJournalHydrology2024",
dependencies = TRUE,
build_vignettes = TRUE)
# Lists all tutorials for this package
browseVignettes("BARMAJournalHydrology2024")
?BARMAJournalHydrology2024
remotes::install_github("everton-da-costa/BARMAJournalHydrology2024",
dependencies = TRUE,
build_vignettes = TRUE)
# Lists all tutorials for this package
browseVignettes("BARMAJournalHydrology2024")
remotes::install_github(
"everton-da-costa/BARMAJournalHydrology2024",
dependencies = TRUE,
build_vignettes = TRUE,
force = TRUE  # This forces R to re-install the package
)
browseVignettes("BARMAJournalHydrology2024")
# Open the main application case study
vignette("application", package = "BARMAJournalHydrology2024")
# Open the technical deep-dive on hypothesis tests
vignette("classical_tests", package = "BARMAJournalHydrology2024")
setwd("~/Dropbox/github/BARMAJournalHydrology2024/R")
rm(list = ls())
getwd()
list.files()
devtools::load_all()
devtools::unload()
devtools::install()
devtools::document()
devtools::check()
library(BARMAJournalHydrology2024)
?barma_classical_tests
remotes::install_github("everton-da-costa/BarmaRidgeBJPS2025",
dependencies = TRUE,
build_vignettes = TRUE)
git add NAMESPACE man/
setwd("~/Dropbox/github/BARMAJournalHydrology2024/data-raw")
#' Data preparation script for Itaparica reservoir data
#'
#' This script processes raw data for the Itaparica reservoir and creates
#' both data.frame and time series objects for use in the package.
# Load necessary libraries
library(here)
library(zoo)
library(usethis)
# Read and validate raw data
itaparica_raw_df <- tryCatch({
read.csv(here::here("data-raw", "itaparica.csv"))
}, error = function(e) {
stop("Error reading itaparica.csv: ", e$message)
})
# Create sequence of months
first_date <- as.yearmon("jan 1999", format = "%b %Y")
n_rows <- nrow(itaparica_raw_df)
all_dates <- seq(first_date, by = 1/12, length.out = n_rows)
# Create the data frame with complete time sequence
itaparica_df <- data.frame(
time = all_dates,
y = itaparica_raw_df$y
)
# Handle values larger than 1 (with warning)
values_larger_than_one <- itaparica_df$y >= 1
if (any(values_larger_than_one)) {
warning(sprintf(
"Found %d values > 1. These will be set to 0.9999",
sum(values_larger_than_one)
))
print(itaparica_df[values_larger_than_one, ])
itaparica_df$y[values_larger_than_one] <- 0.9999
}
# Create time series object
itaparica_ts <- ts(
itaparica_df$y,
start = c(1999, 1),
frequency = 12
)
# Add metadata attributes
attr(itaparica_df, "source") <- "Itaparica Reservoir Data"
attr(itaparica_df, "description") <- "Monthly useful volume of Itaparica reservoir"
attr(itaparica_df, "date_processed") <- Sys.Date()
# Save data objects
usethis::use_data(itaparica_df, overwrite = TRUE)
usethis::use_data(itaparica_ts, overwrite = TRUE)
# Document data cleaning steps
cat("Data processing completed:\n",
"- Loaded raw data from itaparica.csv\n",
"- Created time sequence from Jan 1999\n",
"- Handled values > 1\n",
"- Created data.frame and time series objects\n",
"- Added metadata\n",
"- Saved processed data\n",
file = "data-raw/processing_log.txt",
append = TRUE)
setwd("~/Dropbox/github/BARMAJournalHydrology2024")
#' Data preparation script for Itaparica reservoir data
#'
#' This script processes raw data for the Itaparica reservoir and creates
#' both data.frame and time series objects for use in the package.
# Load necessary libraries
library(here)
library(zoo)
library(usethis)
# Read and validate raw data
itaparica_raw_df <- tryCatch({
read.csv(here::here("data-raw", "itaparica.csv"))
}, error = function(e) {
stop("Error reading itaparica.csv: ", e$message)
})
# Create sequence of months
first_date <- as.yearmon("jan 1999", format = "%b %Y")
n_rows <- nrow(itaparica_raw_df)
all_dates <- seq(first_date, by = 1/12, length.out = n_rows)
# Create the data frame with complete time sequence
itaparica_df <- data.frame(
time = all_dates,
y = itaparica_raw_df$y
)
# Handle values larger than 1 (with warning)
values_larger_than_one <- itaparica_df$y >= 1
if (any(values_larger_than_one)) {
warning(sprintf(
"Found %d values > 1. These will be set to 0.9999",
sum(values_larger_than_one)
))
print(itaparica_df[values_larger_than_one, ])
itaparica_df$y[values_larger_than_one] <- 0.9999
}
# Create time series object
itaparica_ts <- ts(
itaparica_df$y,
start = c(1999, 1),
frequency = 12
)
# Add metadata attributes
attr(itaparica_df, "source") <- "Itaparica Reservoir Data"
attr(itaparica_df, "description") <- "Monthly useful volume of Itaparica reservoir"
attr(itaparica_df, "date_processed") <- Sys.Date()
# Save data objects
usethis::use_data(itaparica_df, overwrite = TRUE)
usethis::use_data(itaparica_ts, overwrite = TRUE)
# Document data cleaning steps
cat("Data processing completed:\n",
"- Loaded raw data from itaparica.csv\n",
"- Created time sequence from Jan 1999\n",
"- Handled values > 1\n",
"- Created data.frame and time series objects\n",
"- Added metadata\n",
"- Saved processed data\n",
file = "data-raw/processing_log.txt",
append = TRUE)
rm(list = ls())
getwd()
list.files()
devtools::load_all()
devtools::unload()
devtools::install()
devtools::document()
devtools::check()
setwd("~/Dropbox/github/BARMAJournalHydrology2024/vignettes")
setwd("~/Dropbox/github/BARMAJournalHydrology2024/vignettes")
render::rmarkdown("reservoir_itaparica.Rmd", "html_vignette")
rmarkdown::render("reservoir_itaparica.Rmd", "html_vignette")
rmarkdown::render("simulated_ts_classical_tests.Rmd", "html_vignette")
rmarkdown::render("reservoir_itaparica.Rmd", "html_vignette")
setwd("~/Dropbox/github/BARMAJournalHydrology2024")
library(usethis)
usethis::use_git_ignore(c(
".Rproj.user",
".Rhistory",
".Rdata",
".httr-oauth",
"*.tar.gz"
))
# install.packages("usethis")
usethis::use_git_config(
user.name = "everton-da-costa",
user.email = "everto.cost@gmail.com"
)
